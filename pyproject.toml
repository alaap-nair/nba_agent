[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "nba-agent"
version = "1.0.0"
description = "AI-powered NBA statistics and analytics assistant with LangChain and Streamlit"
readme = "README.md"
license = {file = "LICENSE"}
authors = [
    {name = "NBA Agent Team", email = "support@nba-agent.com"}
]
keywords = ["nba", "basketball", "ai", "langchain", "streamlit", "analytics"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "Intended Audience :: Sports/Basketball Fans",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10", 
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "Topic :: Internet :: WWW/HTTP :: Dynamic Content",
]
requires-python = ">=3.8"
dependencies = [
    "langchain>=0.1.0",
    "langchain-openai>=0.1.0",
    "openai>=1.0.0",
    "streamlit>=1.28.0",
    "nba-api>=1.2.0",
    "pandas>=1.5.0",
    "numpy>=1.24.0",
    "requests>=2.31.0",
    "python-dotenv>=1.0.0",
]

[project.optional-dependencies]
test = [
    "judgeval>=0.1.0",
    "pytest>=7.0.0",
    "pytest-asyncio>=0.21.0",
    "pytest-cov>=4.1.0",
    "pytest-mock>=3.11.0",
]
viz = [
    "plotly>=5.17.0",
    "altair>=5.0.0",
    "matplotlib>=3.7.0",
    "seaborn>=0.12.0",
]
prod = [
    "gunicorn>=21.2.0",
    "uvicorn>=0.24.0",
    "prometheus-client>=0.19.0",
    "psutil>=5.9.0",
]
dev = [
    "black>=23.0.0",
    "isort>=5.12.0",
    "flake8>=6.0.0",
    "mypy>=1.7.0",
    "pre-commit>=3.5.0",
    "jupyterlab>=4.0.0",
]
all = [
    "nba-agent[test,viz,prod,dev]",
]

[project.urls]
Homepage = "https://github.com/your-username/nba-agent"
Documentation = "https://github.com/your-username/nba-agent/docs"
Repository = "https://github.com/your-username/nba-agent.git"
Issues = "https://github.com/your-username/nba-agent/issues"
Changelog = "https://github.com/your-username/nba-agent/blob/main/CHANGELOG.md"

[project.scripts]
nba-agent = "src.agent:main"
nba-chat = "apps.chat:main"
nba-web = "launcher:main"

[tool.setuptools.packages.find]
where = ["."]
include = ["src*", "apps*", "tests*"]
exclude = ["tests*"]

[tool.setuptools.package-data]
"*" = ["*.json", "*.yaml", "*.yml", "*.toml"]

# Black configuration
[tool.black]
line-length = 88
target-version = ["py38", "py39", "py310", "py311"]
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
  | cache
)/
'''

# isort configuration
[tool.isort]
profile = "black"
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true
line_length = 88
skip_gitignore = true
skip_glob = ["**/cache/*", "**/fixtures/*"]

# MyPy configuration
[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true
show_error_codes = true

[[tool.mypy.overrides]]
module = [
    "nba_api.*",
    "streamlit.*",
    "langchain.*",
    "judgeval.*",
]
ignore_missing_imports = true

# Pytest configuration
[tool.pytest.ini_options]
minversion = "7.0"
addopts = [
    "-ra",
    "--strict-markers",
    "--strict-config",
    "--cov=src",
    "--cov=apps",
    "--cov-report=term-missing",
    "--cov-report=html",
    "--cov-report=xml",
]
testpaths = ["tests"]
pythonpath = ["."]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
    "api: marks tests that require NBA API access",
    "judgment: marks tests that require Judgment Labs integration",
]

# Coverage configuration
[tool.coverage.run]
source = ["src", "apps"]
omit = [
    "*/tests/*",
    "*/test_*",
    "*/__pycache__/*",
    "*/cache/*",
    "*/fixtures/*",
    "*/.venv/*",
    "*/venv/*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]

# Flake8 configuration (in setup.cfg format since flake8 doesn't support pyproject.toml yet)
# See .flake8 file for actual configuration 